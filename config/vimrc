"if get(s:, 'loaded', 0) != 0 | finish | else | let s:loaded = 1 | endif
set encoding=utf-8 fileencodings=utf-8,ucs-bom,gbk,gb18030,big5,euc-jp,latin1
let mapleader = "\<space>"

set nocompatible hidden wrap
set hlsearch incsearch ignorecase smartcase
set backspace=indent,eol,start
set completeopt=menu,preview
set noswapfile nobackup nowritebackup
set cindent autoindent smartindent expandtab smarttab 
set nu signcolumn=number laststatus=1 mouse=a
set wildignore+=.bak,*.swp,*.class,*.pyc,*DS_Store*,*.swp,*/.Trash/*
set updatetime=1000
set ts=4 sw=4 sts=4
set autoread t_Co=256
au FileType javascript,html,vue setlocal sw=2 ts=2 sts=2

syntax on
filetype plugin indent on
nnoremap <c-c> :q<cr>
nnoremap - :Explore<cr>
for [k, v] in items({"<c-b>": "<left>", "<c-f>": "<right>",
\"<c-a>": "<home>","<c-e>": "<end>", "<c-d>": "<del>"})
    exe "inoremap ".k." ".v | exe "cnoremap ".k." ".v
endfor

au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif

call plug#begin('~/.vim/plugged')
Plug 'christoomey/vim-tmux-navigator'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'
Plug 'jiangmiao/auto-pairs'
Plug '907th/vim-auto-save'
Plug 'sbdchd/neoformat'
nnoremap = :Neoformat<cr>
let g:neoformat_basic_format_align = 1
let g:neoformat_basic_format_trim = 1

let g:auto_save = 1
let g:netrw_dirhistmax = 0
let g:tmux_navigator_save_on_switch = 2

Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
noremap  <c-e>      :<C-U>call fzf#vim#history()<CR>
noremap  <c-p>      :<C-U>call fzf#vim#files('')<CR>
nnoremap <leader>m  :<C-U>call fzf#vim#marks()<CR>
nnoremap <leader>w  y:<C-U><C-R>=printf("Rg %s", expand("<cword>"))<CR>
nnoremap <leader>s  :<C-U><C-R>=printf("Rg ")<CR>
vnoremap <leader>s  y:<C-U><C-R>=printf("Rg %s", getreg('"'))<CR>
nnoremap <leader>t  :<C-U>BTags<CR>
let g:fzf_layout = { 'window': 'enew' }
let g:fzf_commits_log_options =  "-200 --color=always"
let g:fzf_preview_window = ['up:80%', 'ctrl-/']

Plug 'TovarishFin/vim-solidity'
Plug 'tomasiser/vim-code-dark'
let g:codedark_transparent=1

call plug#end()

if get(g:, "feature_mode", "basic") != "basic" |colorscheme codedark |endif
for g in ['Normal', 'EndOfBuffer', 'LineNr', "Directory"]
    exe "hi ".g." ctermbg=NONE guibg=NONE" | endfor
hi CursorLine ctermbg=22
hi StatusLine ctermbg=58
hi StatusLineNC ctermbg=238
