#!/usr/bin/env sh
[ -z "$PS1" ] && return

# basic config
local_dir="$HOME/.local"

# Handle PATH
case $PATH in 
    *conda*) ;;
    *) if [ -d "$HOME/nq/bin" ]; then
        nqitembin="$HOME/nq/bin" nqbin="$HOME/nq/bin"
    else
        nqitembin="$local_dir/bin" nqbin="$HOME/.config/nq/bin"
    fi
    PATH="$nqbin:$local_dir/conda/bin:$HOME/.cargo/bin:$PATH"
    PATH="$HOME/go/bin:$nqitembin:$nqitembin/node:$PATH"
    export PATH;;
esac


# Conda
CONDA_INIT_SCRIPT="$local_dir/conda/etc/profile.d/conda.sh" 
[ -f $CONDA_INIT_SCRIPT ] && . $CONDA_INIT_SCRIPT

# Homebrew
brew_path="/opt/homebrew/bin/brew"
[ -f $brew_path ] && [ -z $HOMEBREW_PREFIX ] &&\
    eval "$($brew_path shellenv)"

iploc() {
    for ip in "$@"; do
        curl --silent "http://a8ae7a319bf8a4c53aac54e335fe1cf2-882779430.ap-east-1.elb.amazonaws.com/get_area_from_ip?ip=$ip"|\
            jq '"\(.country_long);\(.region);\(.city)"'
    done
}

_confirm_run() {
    read -p "$1[confirm]:" -n 1 key
    if [ "$key" = "" ]; then
        eval "$1"
    fi
}

cf() {
    cmd=$(complete-fzf --alias="`alias`" --command="$*")
    _confirm_run "$cmd"
}

cr() {
    cmd=`history | sed 's/\s\+[0-9]\+\s\+//g' | sort -rn | awk '!x[$0]++' | fzf --layout=reverse --prompt='Cmd> '`
    _confirm_run "$cmd"
}

# fzf
export FZF_DEFAULT_COMMAND="fd --type file --follow --color=never --hidden --exclude '.git'"
export FZF_DEFAULT_OPTS="--ansi -m --color dark --bind=ctrl-l:toggle-all --bind=ctrl-d:preview-half-page-down --bind=ctrl-u:preview-half-page-up --bind=ctrl-/:toggle-preview --inline-info --preview-window wrap --height=10"

# Basic settings
export EDITOR=vim
export LANG=en_US.UTF-8
export LC_ALL=$LANG
export TERM="xterm-256color"
export PYTHONPATH="."

alias ls='ls --color'
alias ll='ls --color -alh'

alias grep='grep --color=auto'
alias abrew='arch -arm64 brew'
alias g='git'
alias pipx="$HOME/.local/conda/bin/python -m pip"
alias Lg='lazygit'
alias d='docker'
alias dc='docker-compose'
alias sv="sudo supervisorctl"

alias zdd='zoxide add "`pwd`"'
alias zl='zoxide query -l -s'

alias vih='suvim +History'

alias bat='bat -p'
alias m='bat --language=man --color=always'
export BAT_THEME="Solarized (dark)"
# man() {
#     if /usr/bin/man $@ 2>&1 >/dev/null; then
#         /usr/bin/man $@ | col -bx | bat --language=man --color=always
#     elif $1 --help 2>&1 >/dev/null; then
#         $1 --help | bat --language=man --color=always
#     fi
# }


# For different shells
if command -v zle &> /dev/null; then
    # zsh
    setopt SHARE_HISTORY
    setopt INC_APPEND_HISTORY
    setopt HIST_IGNORE_DUPS
    setopt HIST_IGNORE_ALL_DUPS
    setopt HIST_IGNORE_SPACE
    setopt HIST_SAVE_NO_DUPS
    setopt HIST_VERIFY
    setopt PROMPT_SUBST
    WORDCHARS=${WORDCHARS//[\/]}
    HISTFILE="${ZDOTDIR:-${HOME}}/.zhistory"
    SAVEHIST=5000; HISTSIZE=2000
    autoload -Uz compinit && compinit -C && zmodload zsh/complist
    zstyle ':completion:*' menu yes select
    zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
    bindkey -e && bindkey -M menuselect '/' history-incremental-search-forward

    # zsh syntax begin
    . "$local_dir/zsh-autosuggestions/zsh-autosuggestions.zsh"
    . "$local_dir/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
    fpath=($local_dir/zsh-autosuggestions/src $fpath)

    dump_completions() {
        fpath=($HOME/.local/zsh-completions/src $fpath)
        rm -f ~/.zcompdump
        compinit
    }

    fzf-history-widget() {
      selected=`history -n 0 |awk '!x[$0]++' |FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS -e +s +m --tac --query ${(qqq)LBUFFER} --layout=reverse" fzf`
      BUFFER=$selected; CURSOR=$#BUFFER; zle redisplay
    }
    zle -N fzf-history-widget && bindkey '^R' fzf-history-widget

    fzf-complete-widget() {
      BUFFER=$(complete-fzf --alias="`alias`" --command="$LBUFFER"); CURSOR=$#BUFFER; zle redisplay
    }
    zle -N fzf-complete-widget && bindkey '^G' fzf-complete-widget

    # zoxide
    eval "$(zoxide init zsh --cmd z --hook none)"
    _zoxide_zsh_tab_completion() {
        (( $+compstate )) && compstate[insert]=menu
        local keyword="${words:2}"
        local completions=(${(@f)"$(zoxide query -l "$keyword")"})
        compadd -U -V z "${(@)completions}"
    }
    [ "${+functions[compdef]}" -ne 0 ] && compdef -d z &&\
        compdef _zoxide_zsh_tab_completion z 2> /dev/null
    # zoxide auto add
    chpwd() { 
        [ -e ".git" ] && zoxide add "`pwd`"
    }
    # zoxide zshell shortcut
    zoxide_widget() {
      selected="cd $(zoxide query -l | fzf --layout=reverse)"
      BUFFER=$selected; CURSOR=$#BUFFER; zle redisplay
    }
    zle -N zoxide_widget && bindkey '^H' zoxide_widget

    printcolors() {
        for i in {0..255} ; do
            printf "\x1b[48;5;%sm%3d\e[0m " "$i" "$i"
            if (( i == 15 )) || (( i > 15 )) && (( (i-15) % 6 == 0 )); then
                printf "\n";
            fi
        done
    }
    # zsh syntax end
   
    # PROMPT
    precmd() {
        [ -e ".git" ] && __git_branch=`git rev-parse --abbrev-ref HEAD 2>/dev/null` &&\
            [ -n $__git_branch ] && __git_branch=" $__git_branch" || __git_branch=""
    }
    LOCAL_MACHINE_NAME=`hostname`
    PROMPT=$'%(?:%F{2}:%F{1})${LOCAL_MACHINE_NAME:->} %B%F{4}%c%b%F{8}${__git_branch}%f%{$reset_color%} %# '

    alias ls='lsd --icon=never'
    alias ll='lsd --icon=never -alh'
    alias vih='vim +History'

    # end zsh

elif command -v bind &> /dev/null; then
    # bash
    __zoxide_to_directory__() {
      output="cd $(zoxide query -l | fzf --layout=reverse)"
      READLINE_LINE="$output"
      READLINE_POINT=0x7fffffff
    }
    bind -x '"\C-h": __zoxide_to_directory__'

    __fzf_complete__() {
      output=$(complete-fzf --alias="`alias`" --command="$READLINE_LINE")
      READLINE_LINE="$output"
      READLINE_POINT=0x7fffffff
    }
    bind -x '"\C-g": __fzf_complete__'

    __fzf_history__() {
      local output opts script
      opts="-n2..,.. --scheme=history +m --read0"
      script='BEGIN { getc; $/ = "\n\t"; $HISTCOUNT = $ENV{last_hist} + 1 } s/^[ *]//; print $HISTCOUNT - $. . "\t$_" if !$seen{$_}++'
      output=$(
        builtin fc -lnr -2147483648 |
          last_hist=$(HISTTIMEFORMAT='' builtin history 1) perl -n -l0 -e "$script" |
          FZF_DEFAULT_OPTS="$opts" fzf --query "$READLINE_LINE"
      ) || return
      READLINE_LINE=${output#*$'\t'}
      if [[ -z "$READLINE_POINT" ]]; then
        echo "$READLINE_LINE"
      else
        READLINE_POINT=0x7fffffff
      fi
    }
    bind -x '"\C-r": __fzf_history__'

    if command -v tmux &> /dev/null; then
        if [[ $- =~ i ]] && [[ -z "$TMUX" ]] && [[ -n "$SSH_TTY" ]]; then
            tmux a -t0 || tmux
        fi
    fi
    # end bash
fi

[ -f "$HOME/.platformrc" ] && . "$HOME/.platformrc"
