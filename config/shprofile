#
# Used only in thin client packages
#

# Handle PATH
case $PATH in
    *nq/bin*) ;;
    *) PATH="$HOME/nq/bin:$PATH"
       export PATH;;
esac


export EDITOR=vim
export LANG=en_US.UTF-8


alias ls='ls --color'
alias g='git'
alias d='sudo docker'
alias dc='sudo docker-compose'
alias vih='vim +History'
alias vij='vim +Files'
alias sv='sudo supervisorctl'

# zoxide
alias zdd='zoxide add `pwd`'
alias zl='zoxide query -l -s'

# fzf
export FZF_DEFAULT_COMMAND="fd --type file --follow --color=never --hidden --exclude '.git'"
export FZF_DEFAULT_OPTS='--ansi -m --color dark --bind=ctrl-l:toggle-all --bind=ctrl-d:preview-half-page-down --bind=ctrl-u:preview-half-page-up --bind=ctrl-/:toggle-preview --inline-info --preview-window wrap --height=10'


case $SHELL in
  *bash*)
    __fzf_complete__() {
      output=$(complete-fzf --alias="`alias`" --command="$READLINE_LINE")
      READLINE_LINE="$output"
      READLINE_POINT=0x7fffffff
    }
    bind -x '"\C-g": __fzf_complete__'

    __fzf_history__() {
      local output opts script
      opts="-n2..,.. --scheme=history +m --read0"
      script='BEGIN { getc; $/ = "\n\t"; $HISTCOUNT = $ENV{last_hist} + 1 } s/^[ *]//; print $HISTCOUNT - $. . "\t$_" if !$seen{$_}++'
      output=$(
        builtin fc -lnr -2147483648 |
          last_hist=$(HISTTIMEFORMAT='' builtin history 1) perl -n -l0 -e "$script" |
          FZF_DEFAULT_OPTS="$opts" fzf --query "$READLINE_LINE"
      ) || return
      READLINE_LINE=${output#*$'\t'}
      if [[ -z "$READLINE_POINT" ]]; then
        echo "$READLINE_LINE"
      else
        READLINE_POINT=0x7fffffff
      fi
    }
    bind -x '"\C-r": __fzf_history__'
  ;;
esac

_confirm_run() {
    read -p "$1[confirm]:" -n 1 key
    if [ "$key" = "" ]; then
        eval "$1"
    fi
}

f() {
    cmd=$(complete-fzf --alias="`alias`" --command="$*")
    _confirm_run "$cmd"
}

r() {
    cmd=`history | sed 's/\s\+[0-9]\+\s\+//g' | sort -rn | awk '!x[$0]++' | fzf --layout=reverse --prompt='Cmd> '`
    _confirm_run "$cmd"
}
