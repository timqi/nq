#!/bin/sh
#
# install script:
# url=https://raw.githubusercontent.com/timqi/nq/main/thin-installer; nq=/tmp/nq.thin.sh; curl -# $url -sL -o $nq || wget -O $nq $url; sh $nq 0 0; source $HOME/nq/profile; rm -f $nq
#
# $1: FORCE_DOWNLOAD_BIN
# $2: REMOVE_ADVANCED_SHELL
#

# Handle thin client upgrade
NQ_THIN_VERSION=2023.11.09
if [ -f "$HOME/nq/thin-installer" ]; then
    local_version=`grep 'NQ_THIN_VERSION=' $HOME/nq/thin-installer | head -n 1 | cut -d "=" -f 2`
    if [ "$local_version" = "$NQ_THIN_VERSION" ]; then
        echo "Update to date: $local_version"
        return
    fi
fi

echo "Will upgrade to: $NQ_THIN_VERSION"

FORCE_DOWNLOAD_BIN=${1:-0}
REMOVE_ADVANCED_SHELL=${2:-0}

echo "FORCE_DOWNLOAD_BIN: " $FORCE_DOWNLOAD_BIN
echo "REMOVE_ADVANCED_SHELL: " $REMOVE_ADVANCED_SHELL

download_and_decompress() {
    echo "Download from $1"
    echo "Download to $2"
    if command -v curl 2>&1 >/dev/null; then
        curl -L -H "Cache-Control: no-cache" --progress-bar "$1" | tar -zx -C $2
    elif command -v wget 2>&1 >/dev/null; then
        wget $1 -O - | tar -zx -C $2
    fi
}

nq_dir="$HOME/nq"
if [ ! -d $nq_dir ] || [ "$FORCE_DOWNLOAD_BIN" = "1" ]; then
    nq_url="https://github.com/timqi/nq/releases/download/thin/nq.thin.tar.gz"
    [ -d $nq_dir ] && rm -rf $nq_dir
    mkdir -p $nq_dir
    download_and_decompress $nq_url $nq_dir
fi

# Download configs
nq_script_dir="$nq_dir/nq-main"
[ -d $nq_script_dir ] && rm -rf $nq_script_dir
url="https://github.com/timqi/nq/archive/main.tar.gz"
download_and_decompress $url $nq_dir

mv "$nq_script_dir/config/tmux.conf" $nq_dir/tmux.conf
[ ! -h "$HOME/.tmux.conf" ] ||\
    [ "`readlink $HOME/.tmux.conf`" != "$nq_dir/tmux.conf" ] &&\
    ln -sfv $nq_dir/tmux.conf $HOME/.tmux.conf

mv "$nq_script_dir/bin/"* "$nq_dir/bin/"
mv "$nq_script_dir/nq" "$nq_dir/bin/"
mv "$nq_script_dir/thin-installer" $nq_dir/thin-installer
mv "$nq_script_dir/config/profile" $nq_dir/profile
[ "$REMOVE_ADVANCED_SHELL" = "1" ] && \
    sed -i '/#### Advanced shells start ####/,/#### Advanced shells end ####/d' \
        "$nq_dir/profile"

# Add vim executable
vim_dir="$nq_dir/vim"
mv "$nq_script_dir/config/vimrc" "$vim_dir"
[ ! -h "$HOME/.vim" ] ||\
    [ "`readlink $HOME/.vim`" != "$vim_dir" ] &&\
    ln -sfv $vim_dir $HOME/.vim

cat <<EOF > "$nq_dir/bin/vim"
VIMRUNTIME="$vim_dir/runtime" "$vim_dir/vim" \$@
EOF
cat <<EOF > "$nq_dir/bin/suvim"
VIMRUNTIME="$vim_dir/runtime" sudo -E "$vim_dir/vim" \$@
EOF
chmod +x "$nq_dir/bin/vim" "$nq_dir/bin/suvim"

# Delete nq scripts
rm -rf $nq_script_dir

# Handle terminfo
if [ ! -d /etc/terminfo ]; then
   mv "$nq_dir/vim/terminfo" /etc
fi

# Add source profile
profile="$HOME/.profile"
source_cmd="source $nq_dir/profile"
if [ ! -f "$profile" ]; then
    echo "$source_cmd" > $profile
else
    sed -i "s|source $nq_dir/shprofile|$source_cmd|g" $profile
    if ! grep -q "$source_cmd" $profile; then
        echo "$source_cmd" >> $profile
    fi
fi

